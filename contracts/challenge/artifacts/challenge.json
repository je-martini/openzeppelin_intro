{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506103cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c806269242d1461003a5780633c597ae81461006a575b600080fd5b610054600480360381019061004f91906102dc565b61009a565b6040516100619190610324565b60405180910390f35b610084600480360381019061007f91906102dc565b6100f1565b6040516100919190610324565b60405180910390f35b6000807f36372b070000000000000000000000000000000000000000000000000000000090506100e9818473ffffffffffffffffffffffffffffffffffffffff1661014890919063ffffffff16565b915050919050565b6000807f80ac58cd000000000000000000000000000000000000000000000000000000009050610140818473ffffffffffffffffffffffffffffffffffffffff1661014890919063ffffffff16565b915050919050565b60006101538361016d565b8015610165575061016483836101ba565b5b905092915050565b6000610199827f01ffc9a7000000000000000000000000000000000000000000000000000000006101ba565b80156101b357506101b18263ffffffff60e01b6101ba565b155b9050919050565b6000806301ffc9a760e01b836040516024016101d6919061037a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015610261575060208210155b801561026d5750600081115b94505050505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a98261027e565b9050919050565b6102b98161029e565b81146102c457600080fd5b50565b6000813590506102d6816102b0565b92915050565b6000602082840312156102f2576102f1610279565b5b6000610300848285016102c7565b91505092915050565b60008115159050919050565b61031e81610309565b82525050565b60006020820190506103396000830184610315565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103748161033f565b82525050565b600060208201905061038f600083018461036b565b9291505056fea264697066735822122011552625cd85d5cea67ed1bbbd3c545a06c74dceeaecf9a36f6ffe9ed76ac7df64736f6c63430008120033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x69242D EQ PUSH2 0x3A JUMPI DUP1 PUSH4 0x3C597AE8 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x36372B0700000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0xE9 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x140 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP4 PUSH2 0x16D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x165 JUMPI POP PUSH2 0x164 DUP4 DUP4 PUSH2 0x1BA JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199 DUP3 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH2 0x1BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B3 JUMPI POP PUSH2 0x1B1 DUP3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH2 0x1BA JUMP JUMPDEST ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x261 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x26D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9 DUP3 PUSH2 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B9 DUP2 PUSH2 0x29E JUMP JUMPDEST DUP2 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D6 DUP2 PUSH2 0x2B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2F1 PUSH2 0x279 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP5 DUP3 DUP6 ADD PUSH2 0x2C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E DUP2 PUSH2 0x309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE 0x26 0x25 0xCD DUP6 0xD5 0xCE 0xA6 PUSH31 0xD1BBBD3C545A06C74DCEEAECF9A36F6FFE9ED76AC7DF64736F6C6343000812 STOP CALLER ",
			"sourceMap": "258:405:14:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@is_ERC20_3427": {
					"entryPoint": 154,
					"id": 3427,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@is_ERC721_3447": {
					"entryPoint": 241,
					"id": 3447,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@supportsERC165InterfaceUnchecked_2521": {
					"entryPoint": 442,
					"id": 2521,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@supportsERC165_2358": {
					"entryPoint": 365,
					"id": 2358,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@supportsInterface_2378": {
					"entryPoint": 328,
					"id": 2378,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_address": {
					"entryPoint": 711,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 732,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_bool_to_t_bool_fromStack": {
					"entryPoint": 789,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
					"entryPoint": 875,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": 804,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
					"entryPoint": 890,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 670,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 777,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bytes4": {
					"entryPoint": 831,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 638,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 633,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 688,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2100:15",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:15",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:15",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:15"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:15"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:15",
										"type": ""
									}
								],
								"src": "7:75:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:15",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:15",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:15"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:15",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:15",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:15"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:81:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:65:15",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "404:5:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "411:42:15",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "400:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "400:54:15"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:15"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:15",
										"type": ""
									}
								],
								"src": "334:126:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "511:51:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "521:35:15",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "550:5:15"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "532:17:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:24:15"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "521:7:15"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "493:5:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "503:7:15",
										"type": ""
									}
								],
								"src": "466:96:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "611:79:15",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "668:16:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "677:1:15",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "680:1:15",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "670:6:15"
															},
															"nodeType": "YulFunctionCall",
															"src": "670:12:15"
														},
														"nodeType": "YulExpressionStatement",
														"src": "670:12:15"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:15"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "659:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "641:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:24:15"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "631:2:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "631:35:15"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "624:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "624:43:15"
											},
											"nodeType": "YulIf",
											"src": "621:63:15"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "604:5:15",
										"type": ""
									}
								],
								"src": "568:122:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "748:87:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "758:29:15",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "780:6:15"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "767:12:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "767:20:15"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "758:5:15"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "823:5:15"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "796:26:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "796:33:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "796:33:15"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "726:6:15",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "734:3:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "742:5:15",
										"type": ""
									}
								],
								"src": "696:139:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "907:263:15",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "953:83:15",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "955:77:15"
															},
															"nodeType": "YulFunctionCall",
															"src": "955:79:15"
														},
														"nodeType": "YulExpressionStatement",
														"src": "955:79:15"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "928:7:15"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "937:9:15"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "924:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "924:23:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "949:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "920:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "920:32:15"
											},
											"nodeType": "YulIf",
											"src": "917:119:15"
										},
										{
											"nodeType": "YulBlock",
											"src": "1046:117:15",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1061:15:15",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1075:1:15",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1065:6:15",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1090:63:15",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:22:15"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1145:7:15"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "1100:20:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1100:53:15"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1090:6:15"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "877:9:15",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "888:7:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "900:6:15",
										"type": ""
									}
								],
								"src": "841:329:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1218:48:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1228:32:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1253:5:15"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "1246:6:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1246:13:15"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1239:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1239:21:15"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1228:7:15"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1200:5:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1210:7:15",
										"type": ""
									}
								],
								"src": "1176:90:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1331:50:15",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1348:3:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1368:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1353:14:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1353:21:15"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1341:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1341:34:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1341:34:15"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1319:5:15",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1326:3:15",
										"type": ""
									}
								],
								"src": "1272:109:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1479:118:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1489:26:15",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1501:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1512:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1497:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1497:18:15"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1489:4:15"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1563:6:15"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1576:9:15"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1587:1:15",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1572:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1572:17:15"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1525:37:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1525:65:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1525:65:15"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1451:9:15",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1463:6:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1474:4:15",
										"type": ""
									}
								],
								"src": "1387:210:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1647:105:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1657:89:15",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1672:5:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1679:66:15",
														"type": "",
														"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1668:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1668:78:15"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1657:7:15"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bytes4",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1629:5:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1639:7:15",
										"type": ""
									}
								],
								"src": "1603:149:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1821:52:15",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1838:3:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1860:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_bytes4",
															"nodeType": "YulIdentifier",
															"src": "1843:16:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1843:23:15"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1831:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1831:36:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1831:36:15"
										}
									]
								},
								"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1809:5:15",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1816:3:15",
										"type": ""
									}
								],
								"src": "1758:115:15"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1975:122:15",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1985:26:15",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1997:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2008:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1993:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1993:18:15"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1985:4:15"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2063:6:15"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2076:9:15"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2087:1:15",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2072:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "2072:17:15"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2021:41:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "2021:69:15"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2021:69:15"
										}
									]
								},
								"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1947:9:15",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1959:6:15",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1970:4:15",
										"type": ""
									}
								],
								"src": "1879:218:15"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
					"id": 15,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100355760003560e01c806269242d1461003a5780633c597ae81461006a575b600080fd5b610054600480360381019061004f91906102dc565b61009a565b6040516100619190610324565b60405180910390f35b610084600480360381019061007f91906102dc565b6100f1565b6040516100919190610324565b60405180910390f35b6000807f36372b070000000000000000000000000000000000000000000000000000000090506100e9818473ffffffffffffffffffffffffffffffffffffffff1661014890919063ffffffff16565b915050919050565b6000807f80ac58cd000000000000000000000000000000000000000000000000000000009050610140818473ffffffffffffffffffffffffffffffffffffffff1661014890919063ffffffff16565b915050919050565b60006101538361016d565b8015610165575061016483836101ba565b5b905092915050565b6000610199827f01ffc9a7000000000000000000000000000000000000000000000000000000006101ba565b80156101b357506101b18263ffffffff60e01b6101ba565b155b9050919050565b6000806301ffc9a760e01b836040516024016101d6919061037a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015610261575060208210155b801561026d5750600081115b94505050505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a98261027e565b9050919050565b6102b98161029e565b81146102c457600080fd5b50565b6000813590506102d6816102b0565b92915050565b6000602082840312156102f2576102f1610279565b5b6000610300848285016102c7565b91505092915050565b60008115159050919050565b61031e81610309565b82525050565b60006020820190506103396000830184610315565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103748161033f565b82525050565b600060208201905061038f600083018461036b565b9291505056fea264697066735822122011552625cd85d5cea67ed1bbbd3c545a06c74dceeaecf9a36f6ffe9ed76ac7df64736f6c63430008120033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x69242D EQ PUSH2 0x3A JUMPI DUP1 PUSH4 0x3C597AE8 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x36372B0700000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0xE9 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x140 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP4 PUSH2 0x16D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x165 JUMPI POP PUSH2 0x164 DUP4 DUP4 PUSH2 0x1BA JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199 DUP3 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH2 0x1BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B3 JUMPI POP PUSH2 0x1B1 DUP3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH2 0x1BA JUMP JUMPDEST ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x261 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x26D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9 DUP3 PUSH2 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B9 DUP2 PUSH2 0x29E JUMP JUMPDEST DUP2 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D6 DUP2 PUSH2 0x2B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2F1 PUSH2 0x279 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP5 DUP3 DUP6 ADD PUSH2 0x2C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E DUP2 PUSH2 0x309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SSTORE 0x26 0x25 0xCD DUP6 0xD5 0xCE 0xA6 PUSH31 0xD1BBBD3C545A06C74DCEEAECF9A36F6FFE9ED76AC7DF64736F6C6343000812 STOP CALLER ",
			"sourceMap": "258:405:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:165;381:4;397:9;409:24;397:36;;450:31;478:2;450:9;:27;;;;:31;;;;:::i;:::-;443:38;;;323:165;;;:::o;494:167::-;553:4;569:9;581:25;569:37;;623:31;651:2;623:9;:27;;;;:31;;;;:::i;:::-;616:38;;;494:167;;;:::o;1349:282:11:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1543:81;1536:88;;1349:282;;;;:::o;704:427::-;768:4;975:68;1008:7;1017:25;975:32;:68::i;:::-;:149;;;;;1060:64;1093:7;599:10;1102:21;;1060:32;:64::i;:::-;1059:65;975:149;956:168;;704:427;;;:::o;4427:647::-;4529:4;4569:26;4621:34;;;4657:11;4598:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4569:100;;4711:12;4733:18;4761:19;4905:4;4899;4883:13;4877:20;4870:4;4855:13;4851:24;4842:7;4835:5;4824:86;4813:97;;4937:16;4923:30;;4987:4;4981:11;4966:26;;5019:7;:29;;;;;5044:4;5030:10;:18;;5019:29;:48;;;;;5066:1;5052:11;:15;5019:48;5012:55;;;;;;4427:647;;;;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:149::-;1639:7;1679:66;1672:5;1668:78;1657:89;;1603:149;;;:::o;1758:115::-;1843:23;1860:5;1843:23;:::i;:::-;1838:3;1831:36;1758:115;;:::o;1879:218::-;1970:4;2008:2;1997:9;1993:18;1985:26;;2021:69;2087:1;2076:9;2072:17;2063:6;2021:69;:::i;:::-;1879:218;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "194200",
				"executionCost": "238",
				"totalCost": "194438"
			},
			"external": {
				"is_ERC20(address)": "infinite",
				"is_ERC721(address)": "infinite"
			}
		},
		"methodIdentifiers": {
			"is_ERC20(address)": "0069242d",
			"is_ERC721(address)": "3c597ae8"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "direccion",
					"type": "address"
				}
			],
			"name": "is_ERC20",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "direccion",
					"type": "address"
				}
			],
			"name": "is_ERC721",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}